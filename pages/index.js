import Head from 'next/head'
import { supabase } from "../client"
import { useState, useEffect } from "react"
import { useRouter } from 'next/router'

export default function Home() {
  const [profile, setProfile] = useState(null)
  // const [investmentData, setInvestmentData] = useState(null)
  const router = useRouter()
  useEffect(() => {
    fetchProfile()
  }, [])
  async function fetchProfile() {
    const profileData = await supabase.auth.user()
    if (!profileData) {
      router.push('/sign-in')
    } else {
      const investmentData = await fetchInvestorInfo(profileData.email);
      setProfile({ profileData, investmentData })
      console.log(investmentData)
    }
  }

  const fetchInvestorInfo = async (email) => {
    // const res = await fetch(`/api/investor/${email}`)
    // const res = await fetch(`/api/investor/carlotta.riganti@gmail.com`)
    const res = await fetch(`/api/investor/rakesh@ascensionventures.com`)
    const data = await res.json();
    console.log(data)
    return data;
  }
  return (
    <div className="">
      <Head>
        <title>Ascension Investor Portal</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-auto w-full pt-32 overflow-auto">
        {profile && profile.investmentData.status === "ok" ? (
          <div>
            <h1 className="font-bold text-3xl mb-24">Welcome back, {profile.investmentData.investorDetails[0].name}!</h1>
            <div id="fund-investments">
              <h3 className="font-bold text-2xl">Fund Investments</h3>
              <table className="mt-4 text-left table-auto w-full">
                <thead>
                  <tr className="border-b-2 border-white-600">
                    <th>Fund</th>
                    <th>Type</th>
                    <th>Amount Invested</th>
                    <th>Current Value</th>
                    <th>Multiple</th>
                    <th>Balance to Deploy</th>
                  </tr>
                </thead>
                <tbody>
                  {profile.investmentData.fundInvestments.map((fundInvestment, i) => {
                    const { name, fund, invested, currentValue, multiple, type, balanceToDeploy } = fundInvestment;
                    return (<tr key={i}>
                      <td>{fund}</td>
                      <td>{type[0]}</td>
                      <td>£{(Math.round(invested * 100) / 100).toLocaleString()}</td>
                      <td>£{currentValue.toLocaleString()}</td>
                      <td>{Math.round(multiple * 100) / 100}</td>
                      <td>{balanceToDeploy > 0 ? `£${balanceToDeploy.toLocaleString()}` : "£0"}</td>

                    </tr>)
                  })}
                </tbody>
              </table>
            </div>
            <div id="fund-investments" className="mt-24">
              <h3 className="font-bold text-2xl">Portfolio</h3>
              <table className="mt-4 text-left table-auto w-full">
                <thead>
                  <tr className="border-b-2 border-white-600">
                    <th>Company</th>
                    <th>Date</th>
                    <th>Amount Invested</th>
                    <th>Current Value</th>
                    <th>Multiple</th>
                    <th>Fund</th>
                  </tr>
                </thead>
                <tbody>
                  {profile.investmentData.portfolio.map((company, i) => {
                    const { name, fund, invested, currentValue, multiple, type, date } = company;
                    return (<tr key={i}>
                      <td>{name}</td>
                      <td>{date}</td>
                      <td>£{invested.toLocaleString()}</td>
                      <td>£{currentValue.toLocaleString()}</td>
                      <td>{Math.round(multiple * 100) / 100}</td>
                      <td>{fund}</td>
                    </tr>)
                  })}
                </tbody>
              </table>
            </div>
          </div>

        ) : (<div id="sign-in-area">
          <h1 className="text-4xl font-bold">Ascension Investor Portal</h1>
          {(profile && profile.investmentData) && <div className="mt-4 bold uppercase">{profile.investmentData.status}</div>}
        </div>)
        }
      </main >
    </div >
  )
}
